//Ordenamiento burbuja
public void burbuja( int arreglo[] )
{
    for( int j = 1 ; j < arreglo.length ; j++)
    {
        for( int i = 0 ; i<arreglo.length-1 ; i++)
        {
            if ( arreglo[ i ] > arreglo[i+1] )
            {
                temp = arreglo[ i ];
                arreglo[i] = arreglo[i + 1];
                arreglo[i+1] = temp;

            }
        }
    }
}

//Ordenamiento burbuja en doble dirección
public void shakerSort( int x[ ] )
{
int aux, primero = 1, ultimo = x.length - 1, dir = x.length - 1;
    while ( ultimo >= primero )
    {
        for( int i = ultimo ; i >= primero ; i--)
        {
            if ( x [i - 1] > x[ i ] )
            {
                aux = x[i - 1];
                x[i - 1] = x[ i ];
                x[ i ] = aux;
                dir = i;
            }
        }

        primero = dir + 1;

        for( int i = primero ; i <= ultimo; i++ )
        {
            if ( x [i - 1] > x[ i ] )
            {
                aux = x[i - 1];
                x[i - 1] = x[ i ];
                x[ i ] = aux;
                dir = i;
            }
        }
    ultimo = dir - 1;
    }
}











//Ordenamiento por inserción

public void insercion( int arreglo[] )
{

int i, llave;
    for ( int j = 1 ; j < arreglo.length ; j++ )
    {

        llave = arreglo[ j ];
        i = j - 1;

        while( i >= 0 && arreglo[ i ] > llave )
        {

            arreglo[i + 1] = arreglo[ i ];
            i--;

        }
        arreglo[i + 1] = llave;

    }

}


//Ordenamiento por selección
public void seleccion (int arreglo[] )
{
int i, j, k, menor;
i = 0;

    while( i < arreglo.length - 1)
    {

    menor = arreglo [i];
    k = i;

    for( j = i+1; j < arreglo.length; j++)
    {

        if (arreglo [j] < menor )
        {

            menor = arreglo [j];
            k = j;

        }

    }

    arreglo [k] = arreglo[i];
    arreglo [i] = menor;
    i++;

    }
}


//Ordenamiento ShellSort
public void shellSort(int a[])
{
    for (int incr = a.length/2; incr>0; incr/= 2 )
    {

        for (int i = incr ; i < a.length ; i++ )
        {

            int j = i - incr;
            
            while (j >= 0)
            {
                
                if (a[j] > a[j + incr])
                {

                    int T = a[ j ];
                    a[ j ] = a[j+incr];
                    a[j+incr] = T;
                    j -= incr;

                }
                else
                {

                    j = -1;

                }
            }

        }

    }
}